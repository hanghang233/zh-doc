{"remainingRequest":"/Users/cassie/Desktop/work2/person/zh_doc/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/cassie/Desktop/work2/person/zh_doc/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cassie/Desktop/work2/person/zh_doc/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cassie/Desktop/work2/person/zh_doc/node_modules/@vuepress/plugin-pwa/lib/SWUpdatePopup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cassie/Desktop/work2/person/zh_doc/node_modules/@vuepress/plugin-pwa/lib/SWUpdatePopup.vue","mtime":1538470199000},{"path":"/Users/cassie/Desktop/work2/person/zh_doc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cassie/Desktop/work2/person/zh_doc/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/cassie/Desktop/work2/person/zh_doc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cassie/Desktop/work2/person/zh_doc/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* global SW_UPDATE_POPUP */\nimport event from './event';\nimport { normalizeConfig } from '@app/util';\nimport { popupConfig as defaultPopupConfig } from './i18n';\nexport default {\n  data: function data() {\n    return {\n      rawPopupConfig: SW_UPDATE_POPUP,\n      updateEvent: null\n    };\n  },\n  created: function created() {\n    event.$on('sw-updated', this.onSWUpdated);\n\n    if (SW_UPDATE_POPUP === true) {\n      this.rawPopupConfig = defaultPopupConfig;\n    }\n  },\n  computed: {\n    popupConfig: function popupConfig() {\n      return normalizeConfig(this, this.rawPopupConfig);\n    },\n    enabled: function enabled() {\n      return Boolean(this.popupConfig && this.updateEvent);\n    },\n    message: function message() {\n      var c = this.popupConfig;\n      return c && c.message || defaultPopupConfig['/'].message;\n    },\n    buttonText: function buttonText() {\n      var c = this.popupConfig;\n      return c && c.buttonText || defaultPopupConfig['/'].buttonText;\n    }\n  },\n  methods: {\n    onSWUpdated: function onSWUpdated(e) {\n      this.updateEvent = e;\n    },\n    reload: function reload() {\n      if (this.updateEvent) {\n        this.updateEvent.skipWaiting().then(function () {\n          location.reload(true);\n        });\n        this.updateEvent = null;\n      }\n    }\n  }\n};",{"version":3,"sources":["SWUpdatePopup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA,OAAA,KAAA,MAAA,SAAA;AACA,SAAA,eAAA,QAAA,WAAA;AACA,SAAA,WAAA,IAAA,kBAAA,QAAA,QAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,cAAA,EAAA,eADA;AAEA,MAAA,WAAA,EAAA;AAFA,KAAA;AAIA,GANA;AAQA,EAAA,OARA,qBAQA;AACA,IAAA,KAAA,CAAA,GAAA,CAAA,YAAA,EAAA,KAAA,WAAA;;AACA,QAAA,eAAA,KAAA,IAAA,EAAA;AACA,WAAA,cAAA,GAAA,kBAAA;AACA;AACA,GAbA;AAeA,EAAA,QAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,aAAA,eAAA,CAAA,IAAA,EAAA,KAAA,cAAA,CAAA;AACA,KAHA;AAKA,IAAA,OALA,qBAKA;AACA,aAAA,OAAA,CAAA,KAAA,WAAA,IAAA,KAAA,WAAA,CAAA;AACA,KAPA;AASA,IAAA,OATA,qBASA;AACA,UAAA,CAAA,GAAA,KAAA,WAAA;AACA,aAAA,CAAA,IAAA,CAAA,CAAA,OAAA,IAAA,kBAAA,CAAA,GAAA,CAAA,CAAA,OAAA;AACA,KAZA;AAcA,IAAA,UAdA,wBAcA;AACA,UAAA,CAAA,GAAA,KAAA,WAAA;AACA,aAAA,CAAA,IAAA,CAAA,CAAA,UAAA,IAAA,kBAAA,CAAA,GAAA,CAAA,CAAA,UAAA;AACA;AAjBA,GAfA;AAmCA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,CADA,EACA;AACA,WAAA,WAAA,GAAA,CAAA;AACA,KAHA;AAKA,IAAA,MALA,oBAKA;AACA,UAAA,KAAA,WAAA,EAAA;AACA,aAAA,WAAA,CAAA,WAAA,GAAA,IAAA,CAAA,YAAA;AACA,UAAA,QAAA,CAAA,MAAA,CAAA,IAAA;AACA,SAFA;AAGA,aAAA,WAAA,GAAA,IAAA;AACA;AACA;AAZA;AAnCA,CAAA","sourcesContent":["<template>\n  <transition name=\"sw-update-popup\">\n    <slot\n      :reload=\"reload\"\n      :enabled=\"enabled\"\n      :message=\"message\"\n      :buttonText=\"buttonText\"\n    >\n      <div\n        v-if=\"enabled\"\n        class=\"sw-update-popup\"\n      >\n        {{ message }}<br>\n        <button @click=\"reload\">{{ buttonText }}</button>\n      </div>\n    </slot>\n  </transition>\n</template>\n\n<script>\n/* global SW_UPDATE_POPUP */\nimport event from './event'\nimport { normalizeConfig } from '@app/util'\nimport { popupConfig as defaultPopupConfig } from './i18n'\n\nexport default {\n  data () {\n    return {\n      rawPopupConfig: SW_UPDATE_POPUP,\n      updateEvent: null\n    }\n  },\n\n  created () {\n    event.$on('sw-updated', this.onSWUpdated)\n    if (SW_UPDATE_POPUP === true) {\n      this.rawPopupConfig = defaultPopupConfig\n    }\n  },\n\n  computed: {\n    popupConfig () {\n      return normalizeConfig(this, this.rawPopupConfig)\n    },\n\n    enabled () {\n      return Boolean(this.popupConfig && this.updateEvent)\n    },\n\n    message () {\n      const c = this.popupConfig\n      return (c && c.message) || defaultPopupConfig['/'].message\n    },\n\n    buttonText () {\n      const c = this.popupConfig\n      return (c && c.buttonText) || defaultPopupConfig['/'].buttonText\n    }\n  },\n\n  methods: {\n    onSWUpdated (e) {\n      this.updateEvent = e\n    },\n\n    reload () {\n      if (this.updateEvent) {\n        this.updateEvent.skipWaiting().then(() => {\n          location.reload(true)\n        })\n        this.updateEvent = null\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.sw-update-popup {\n  position: fixed;\n  right: 1em;\n  bottom: 1em;\n  padding: 1em;\n  border: 1px solid #3eaf7c;\n  border-radius: 3px;\n  background: #fff;\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.5);\n  text-align: center;\n  z-index: 2;\n}\n\n.sw-update-popup > button {\n  margin-top: 0.5em;\n  padding: 0.25em 2em;\n}\n\n.sw-update-popup-enter-active, .sw-update-popup-leave-active {\n  transition: opacity 0.3s, transform 0.3s;\n}\n\n.sw-update-popup-enter, .sw-update-popup-leave-to {\n  opacit: 0;\n  transform: translate(0, 50%) scale(0.5);\n}\n</style>\n"],"sourceRoot":"node_modules/@vuepress/plugin-pwa/lib"}]}