{"remainingRequest":"/Users/xiaohanghang/Desktop/front/code/zh-doc/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/xiaohanghang/Desktop/front/code/zh-doc/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/xiaohanghang/Desktop/front/code/zh-doc/docs/NOTE/Front/note2.md?vue&type=template&id=62b45cea&","dependencies":[{"path":"/Users/xiaohanghang/Desktop/front/code/zh-doc/docs/NOTE/Front/note2.md","mtime":1581571682000},{"path":"/Users/xiaohanghang/Desktop/front/code/zh-doc/node_modules/cache-loader/dist/cjs.js","mtime":1581571682000},{"path":"/Users/xiaohanghang/Desktop/front/code/zh-doc/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1581571684000},{"path":"/Users/xiaohanghang/Desktop/front/code/zh-doc/node_modules/cache-loader/dist/cjs.js","mtime":1581571682000},{"path":"/Users/xiaohanghang/Desktop/front/code/zh-doc/node_modules/vue-loader/lib/index.js","mtime":1581571684000},{"path":"/Users/xiaohanghang/Desktop/front/code/zh-doc/node_modules/@vuepress/markdown-loader/index.js","mtime":1581571682000}],"contextDependencies":[],"result":["\n<ContentSlotsDistributor :slot-key=\"$parent.slotKey\"><h1 id=\"vue实现路由权限总结\"><a class=\"header-anchor\" href=\"#vue实现路由权限总结\" aria-hidden=\"true\">#</a> vue实现路由权限总结</h1>\n<div class=\"tip custom-block\"><p class=\"custom-block-title\">契子</p>\n<ul>\n<li>路由权限总结</li>\n</ul>\n</div>\n<h2 id=\"_01-使用全局路由守卫\"><a class=\"header-anchor\" href=\"#_01-使用全局路由守卫\" aria-hidden=\"true\">#</a> &amp;01.使用全局路由守卫</h2>\n<p>参考iview-admin的实现方式：</p>\n<ul>\n<li>给每一个菜单定义权限，每次跳转之前，全局路由守卫都会对其进行判断，菜单列表根据用户权限把路由过滤一遍生成。判断是否登录/是否符合权限，进行相关处理</li>\n</ul>\n<p>缺点：\n1.如果路由很多，用户并不是所有路由都有权限访问，对性能有影响。全局守卫那里，每次菜单跳转，都要做相应的判断</p>\n<p>2.菜单信息写死在前端，每次修改还要重新编译</p>\n<h2 id=\"_02-使用addroutes实现方式\"><a class=\"header-anchor\" href=\"#_02-使用addroutes实现方式\" aria-hidden=\"true\">#</a> &amp;02.使用addRoutes实现方式</h2>\n<p>参考vue-element-admin</p>\n<ul>\n<li>获取用户信息，筛选有权限访问的路由，再调用addRoutes添加新的路由</li>\n</ul>\n<p>缺点：\n同上2</p>\n<h2 id=\"_03-路由和菜单分离\"><a class=\"header-anchor\" href=\"#_03-路由和菜单分离\" aria-hidden=\"true\">#</a> &amp;03.路由和菜单分离</h2>\n<p>参考vue-quasar-admin</p>\n<ul>\n<li>因菜单icon/菜单名称随时可能修改，后端直接根据用户的权限返回相关的菜单列表。前端在全局路由守卫里面判断，因为菜单的name与路由的name是一一对应的,而后端返回的菜单就已经是经过权限过滤的，所以如果根据路由name找不到对应的菜单，就表示用户有没权限访问。如果路由太多，也可以先挂载不需要权限的路由，再用addRoutes挂载路由</li>\n</ul>\n<p>缺点：\n1.如果添加了新的菜单，后端和前端都要约定好菜单的路由信息，否则会影响正常功能使用</p>\n<p>2.全局守卫依然要做判断</p>\n<h2 id=\"_04-菜单和路由都由后端控制\"><a class=\"header-anchor\" href=\"#_04-菜单和路由都由后端控制\" aria-hidden=\"true\">#</a> &amp;04.菜单和路由都由后端控制</h2>\n<p>1.建议把菜单和路由分开处理，因为菜单可能存在多级，经常会出现多级遍历路由为了拼接菜单的情况。</p>\n<p>2.需要前后端的高级配合。后端返回一个菜单列表和一个路由列表，前端需要的信息都返回。但是这里需要注意，前后端一定要约定好路由组件的路径等信息。</p>\n<p>3.维护一份routerMapComponents.js文件，使用key-value的形式，方便管理后端返回的路由数据。映射到组件上</p>\n<p>4.对于异步组件的处理</p>\n<!--beforebegin--><div class=\"language-bash line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>route.component <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    require<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token punctuation\">..</span>/$<span class=\"token punctuation\">{</span>route.componentPath<span class=\"token punctuation\">}</span>.vue<span class=\"token variable\">`</span></span><span class=\"token punctuation\">]</span>, resolve<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div><!--beforeend--></div><!--afterend--><p>参考：\nhttps://juejin.im/post/5c0b2130f265da615c5913d9</p>\n<p>https://juejin.im/post/5c30c666518825261c1b7191</p>\n</ContentSlotsDistributor>\n",null]}