{"remainingRequest":"/Users/xiaohanghang/Desktop/front/code/zh-doc/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/xiaohanghang/Desktop/front/code/zh-doc/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/xiaohanghang/Desktop/front/code/zh-doc/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/xiaohanghang/Desktop/front/code/zh-doc/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/xiaohanghang/Desktop/front/code/zh-doc/docs/NOTE/Front/browers.md?vue&type=template&id=48031188&","dependencies":[{"path":"/Users/xiaohanghang/Desktop/front/code/zh-doc/docs/NOTE/Front/browers.md","mtime":1582035120000},{"path":"/Users/xiaohanghang/Desktop/front/code/zh-doc/node_modules/cache-loader/dist/cjs.js","mtime":1581571682000},{"path":"/Users/xiaohanghang/Desktop/front/code/zh-doc/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1581571684000},{"path":"/Users/xiaohanghang/Desktop/front/code/zh-doc/node_modules/cache-loader/dist/cjs.js","mtime":1581571682000},{"path":"/Users/xiaohanghang/Desktop/front/code/zh-doc/node_modules/vue-loader/lib/index.js","mtime":1581571684000},{"path":"/Users/xiaohanghang/Desktop/front/code/zh-doc/node_modules/@vuepress/markdown-loader/index.js","mtime":1581571682000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"ContentSlotsDistributor\",\n    { attrs: { \"slot-key\": _vm.$parent.slotKey } },\n    [\n      _c(\"h1\", { attrs: { id: \"浏览器与前端性能\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#浏览器与前端性能\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 浏览器与前端性能--\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"tip custom-block\" }, [\n        _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"契子\")]),\n        _vm._v(\" \"),\n        _c(\"ul\", [_c(\"li\", [_vm._v(\"webpack\")])])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"_01-能不能说一说浏览器缓存\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#_01-能不能说一说浏览器缓存\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" &01.能不能说一说浏览器缓存\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"浏览器缓存分为：强缓存、协商缓存、缓存位置\")]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\n            \"浏览器的缓存又分为两种情况，一种是需要发送HTTP请求，一种是不需要发送请求\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"强缓存：这个阶段不需要发送HTTP缓存。\\n* Expires：过期时间，存在于服务器返回的响应头中，告诉浏览器在这个时间内可以直接从缓存里面取数据，无需请求\\n* Cache-Control：采用过期时间长来控制缓存\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"协商缓存：强缓存失效之后，浏览器在http中携带相应的缓存tag，由服务器根据这个tag来判断是否使用缓存\\n* Last-Modified：最后修改时间\\n* ETag：服务器根据当前文件的内容，给文件生成的唯一标识，只要里面的内容有改动，ETag就会变\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"总结：\\n1、首先通过cache-control验证强缓存是否使用\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"2、如果强缓存可用，可以直接使用；否则进入协商缓存\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"3、判断http协议请求头中的If-Modified-Since和If-None-Match，检查资源是否更新；1）如果更新，返回资源和200状态码；2）否则，返回304，告诉资源直接从浏览器缓存中取\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"h2\",\n        { attrs: { id: \"_02-能不能说一说浏览器的本地存储？各自优劣如何\" } },\n        [\n          _c(\n            \"a\",\n            {\n              staticClass: \"header-anchor\",\n              attrs: {\n                href: \"#_02-能不能说一说浏览器的本地存储？各自优劣如何\",\n                \"aria-hidden\": \"true\"\n              }\n            },\n            [_vm._v(\"#\")]\n          ),\n          _vm._v(\" &02.能不能说一说浏览器的本地存储？各自优劣如何\")\n        ]\n      ),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"浏览器的本地存储主要分为：cookie、webStorage和IndexedDB，其中webStorage又可以分为localStorage和sessionStorage\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\n            \"cookie--用来做状态存储\\n缺点：1、容量缺陷：cookie的存储量只有4kb，只能用来存储少量的信息\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"2、性能缺陷：相同域名及其子域名的http请求，都会携带所有的cookie\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"3、安全缺陷：以文本形式存储在客户端，容易被非法人员截获\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\n            \"sessionStorage和localStorage\\nsessionStorage指会话级别的存储，localStorage指持久化存储；\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"sessionStorage应用场景：表单维护、存储浏览记录\")]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_vm._v(\"IndexedDB：运行在浏览器上面的非关系型数据库\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"h2\",\n        { attrs: { id: \"_03-说一说从输入url到页面呈现出什么-网络篇\" } },\n        [\n          _c(\n            \"a\",\n            {\n              staticClass: \"header-anchor\",\n              attrs: {\n                href: \"#_03-说一说从输入url到页面呈现出什么-网络篇\",\n                \"aria-hidden\": \"true\"\n              }\n            },\n            [_vm._v(\"#\")]\n          ),\n          _vm._v(\" &03.说一说从输入URL到页面呈现出什么--网络篇\")\n        ]\n      ),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"1、构建请求\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"2、查找强缓存：如果是强缓存，直接从缓存中读取\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"3、DNS解析：得到具体的IP地址。浏览器也提供了DNS缓存服务，如果一个域名已经解析过了，会把解析的结果直接缓存下来，下次处理直接走缓存。\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"4、建立TCP连接\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"5、发送HTTP请求\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"6、网络响应\")]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"_04-foreach有return效果吗\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#_04-foreach有return效果吗\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" &04.forEach有return效果吗\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"forEach没有return效果，如果需要终止循环有两种解决方案：\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"1.利用try-catch\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"2.官方推荐：用every和some替代forEach函数。every在碰到return false的时候，中止循环。some在碰到return true的时候，中止循环\"\n        )\n      ])\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}