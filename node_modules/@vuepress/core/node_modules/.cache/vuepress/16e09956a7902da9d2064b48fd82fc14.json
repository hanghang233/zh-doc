{"remainingRequest":"/Users/xiaohanghang/Desktop/front/code/zh-doc/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/xiaohanghang/Desktop/front/code/zh-doc/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/xiaohanghang/Desktop/front/code/zh-doc/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/xiaohanghang/Desktop/front/code/zh-doc/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/xiaohanghang/Desktop/front/code/zh-doc/docs/NOTE/Front/others-note.md?vue&type=template&id=91f19be4&","dependencies":[{"path":"/Users/xiaohanghang/Desktop/front/code/zh-doc/docs/NOTE/Front/others-note.md","mtime":1581689980000},{"path":"/Users/xiaohanghang/Desktop/front/code/zh-doc/node_modules/cache-loader/dist/cjs.js","mtime":1581571682000},{"path":"/Users/xiaohanghang/Desktop/front/code/zh-doc/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1581571684000},{"path":"/Users/xiaohanghang/Desktop/front/code/zh-doc/node_modules/cache-loader/dist/cjs.js","mtime":1581571682000},{"path":"/Users/xiaohanghang/Desktop/front/code/zh-doc/node_modules/vue-loader/lib/index.js","mtime":1581571684000},{"path":"/Users/xiaohanghang/Desktop/front/code/zh-doc/node_modules/@vuepress/markdown-loader/index.js","mtime":1581571682000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"ContentSlotsDistributor\",\n    { attrs: { \"slot-key\": _vm.$parent.slotKey } },\n    [\n      _c(\"h1\", { attrs: { id: \"其他总结\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#其他总结\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 其他总结--\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"tip custom-block\" }, [\n        _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"契子\")]),\n        _vm._v(\" \"),\n        _c(\"ul\", [_c(\"li\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"_01-通信类\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#_01-通信类\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" &01.通信类\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"p\", [\n            _vm._v(\n              \"什么是同源策略及其限制\\n不是一个源的文档无法操作另一个不同源的文档：无法操作cookie、无法操作dom、ajax请求不能操作\"\n            )\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"p\", [_vm._v(\"前后端如何通信\\nAjax、WebSocket、CORS\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"p\", [\n            _vm._v(\n              \"如何创建Ajax\\nXMLHttpRequest对象的工作流程、兼容处理、事件的触发条件、事件的触发顺序\"\n            )\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"p\", [\n            _vm._v(\n              \"跨域通信的几种方法\\nJSONP--利用script异步加载，指定callback函数名，服务器返回之后，执行函数\"\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\n              \"Hash--场景是当前页面A，被使用iframe嵌入到页面B，修改iframe.src的值；window.onhashchange\"\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"p\", [_vm._v(\"postMessage--h5通信标准\")]),\n          _vm._v(\" \"),\n          _c(\"p\", [_vm._v(\"WebSocket、CORS\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"_02-渲染机制\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#_02-渲染机制\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" &02.渲染机制\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"p\", [\n            _vm._v(\n              \"什么是DOCTYPE及作用\\n直接告诉浏览器什么是DTD，DOCTYPE是用来声明文档类型和DTD规范，一个主要的用途就是文件的合法性验证，如果文件代码不合法，那么浏览器解析时便会出错。\"\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\"常见的DOCTYPE有哪些？\\n\"),\n            _c(\"img\", {\n              attrs: { src: require(\"./imgs/doctype.png\"), alt: \"npm-script\" }\n            }),\n            _vm._v(\"\\nHTML4.01有严格模式和宽松模式；\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"p\", [_vm._v(\"浏览器渲染过程\")]),\n          _vm._v(\" \"),\n          _c(\"ol\", [\n            _c(\"li\", [\n              _vm._v(\"浏览器解析元素，通过html parser将元素解析为DOM Tree；\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"li\", [\n              _vm._v(\"浏览器解析css，通过css parser将css解析为style Rules；\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"li\", [\n              _vm._v(\n                \"Dom Tree和style Rules结合，生成Render Tree(这里只是包含结构和样式，并不包括内容和元素位置等具体信息)；\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"li\", [_vm._v(\"Render Tree与Layout结合，教给浏览器paint\")])\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"p\", [\n            _vm._v(\n              \"重排reflow\\nreflow概念；什么情况触发reflow；什么情况避免触发reflow--尽量避免修改到dom元素位置结构等；\"\n            )\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"p\", [\n            _vm._v(\n              \"重绘Repaint\\n定义；触发条件；如何最小程度的repaint--尽量创建fragment片段，一次性添加到页面中\"\n            )\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"p\", [_vm._v(\"布局Layout\")])])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"_03-js渲染机制\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#_03-js渲染机制\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" &03.js渲染机制\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"p\", [\n            _vm._v(\n              \"如何理解js单线程\\n一定时间只能执行一项任务，不能执行多项任务\"\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\n              \"原因：作为浏览器脚本语言，JavaScript的主要用途是与用户互动，以及操作DOM，这决定了它只能是单线程，\"\n            )\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"p\", [\n            _vm._v(\"js任务队列\\n为了要执行的代码，就有一个JavaScript的任务队列\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"p\", [_vm._v(\"同步任务和异步任务\")]),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\"异步任务：setTimeout和setInterval 、监听DOM、promise\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"p\", [\n            _vm._v(\n              \"Event Loop\\njs主线程会不停的从执行栈(同步队列)中读取事件，执行完毕之后，会去查看任务队列是否有任务。\"\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\"宏任务队列：setTimeout、setInterval、XHLHttpRequest\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"p\", [_vm._v(\"微任务队列：promise\")]),\n          _vm._v(\" \"),\n          _c(\"p\", [_vm._v(\"微任务队列优先级高于宏任务队列\")]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"language-bash line-numbers-mode\" }, [\n            _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n              _c(\"code\", [\n                _vm._v(\"  setTimeout\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"((\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=\")\n                ]),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\">\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n    console.log\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _vm._v(\"1\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\";\")]\n                ),\n                _vm._v(\"\\n\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _vm._v(\", 0\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\";\")]\n                ),\n                _vm._v(\"\\n\\nnew Promise\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"((\")]\n                ),\n                _vm._v(\"resolve\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=\")\n                ]),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\">\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n    console.log\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _vm._v(\"2\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\";\")]\n                ),\n                _vm._v(\"\\n    resolve\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\";\")]\n                ),\n                _vm._v(\"\\n\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\".then\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"((\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=\")\n                ]),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\">\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n    console.log\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _vm._v(\"3\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\";\")]\n                ),\n                _vm._v(\"\\n\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\";\")]\n                ),\n                _vm._v(\"\\n\\nconsole.log\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _vm._v(\"4\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\";\")]\n                ),\n                _vm._v(\"   //2、4、3、1\\n\")\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"3\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"4\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"5\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"6\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"7\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"8\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"9\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"10\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"11\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"12\")]),\n              _c(\"br\")\n            ])\n          ]),\n          _c(\"div\", { staticClass: \"language-bash line-numbers-mode\" }, [\n            _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n              _c(\"code\", [\n                _vm._v(\"    \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                  _vm._v(\"let\")\n                ]),\n                _vm._v(\" a \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=\")\n                ]),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\">\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n    setTimeout\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"((\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=\")\n                ]),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\">\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n        console.log\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'任务队列函数1'\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\"\\n    \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _vm._v(\", 0\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\"\\n    \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                  _vm._v(\"for\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _vm._v(\"let i \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=\")\n                ]),\n                _vm._v(\" 0\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\";\")]\n                ),\n                _vm._v(\" i \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"<\")\n                ]),\n                _vm._v(\" 5000\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\";\")]\n                ),\n                _vm._v(\" i++\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n        console.log\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'a的for循环'\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\"\\n    \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _vm._v(\"\\n    console.log\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'a事件执行完'\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\"\\n    \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _vm._v(\"\\n\\n    \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                  _vm._v(\"let\")\n                ]),\n                _vm._v(\" b \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=\")\n                ]),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\">\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n    setTimeout\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"((\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=\")\n                ]),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\">\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n        console.log\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'任务队列函数2'\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\"\\n    \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _vm._v(\", 0\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\"\\n    \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                  _vm._v(\"for\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _vm._v(\"let i \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=\")\n                ]),\n                _vm._v(\" 0\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\";\")]\n                ),\n                _vm._v(\" i \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"<\")\n                ]),\n                _vm._v(\" 5000\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\";\")]\n                ),\n                _vm._v(\" i++\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n        console.log\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'b的for循环'\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\"\\n    \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _vm._v(\"\\n    console.log\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'b事件执行完'\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\"\\n    \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _vm._v(\"\\n\\n    \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                  _vm._v(\"let\")\n                ]),\n                _vm._v(\" c \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=\")\n                ]),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\">\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n    setTimeout\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"((\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=\")\n                ]),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\">\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n        console.log\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'任务队列函数3'\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\"\\n    \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _vm._v(\", 0\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\"\\n    \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                  _vm._v(\"for\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _vm._v(\"let i \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=\")\n                ]),\n                _vm._v(\" 0\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\";\")]\n                ),\n                _vm._v(\" i \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"<\")\n                ]),\n                _vm._v(\" 5000\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\";\")]\n                ),\n                _vm._v(\" i++\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n        console.log\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'c的for循环'\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\"\\n    \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _vm._v(\"\\n    console.log\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'c事件执行完'\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\"\\n    \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _vm._v(\"\\n\\n    a\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\";\")]\n                ),\n                _vm._v(\"\\n    b\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\";\")]\n                ),\n                _vm._v(\"\\n    c\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\";\")]\n                ),\n                _vm._v(\"\\n    // 输出最后的结果\\n    答案：\\n    \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _vm._v(\"5000\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\"a的for循环\\n    a事件执行完\\n    \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _vm._v(\"5000\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\"b的for循环\\n    b事件执行完\\n    \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _vm._v(\"5000\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\n                  \"c的for循环\\n    c事件执行完\\n    任务队列函数1\\n    任务队列函数2\\n    任务队列函数3\\n    //结果是当a、b、c函数都执行完成之后，三个setTimeout才会依次执行\\n\"\n                )\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"3\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"4\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"5\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"6\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"7\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"8\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"9\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"10\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"11\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"12\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"13\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"14\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"15\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"16\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"17\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"18\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"19\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"20\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"21\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"22\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"23\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"24\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"25\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"26\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"27\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"28\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"29\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"30\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"31\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"32\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"33\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"34\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"35\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"36\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"37\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"38\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"39\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"40\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"41\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"42\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"43\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"44\")]),\n              _c(\"br\"),\n              _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"45\")]),\n              _c(\"br\")\n            ])\n          ]),\n          _c(\"p\", [_vm._v(\"哪些语句放入异步队列\")]),\n          _vm._v(\" \"),\n          _c(\"p\", [_vm._v(\"理解语句进入异步队列的时机\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"_04-强缓存与弱缓存\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#_04-强缓存与弱缓存\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" &04.强缓存与弱缓存\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"缓存可以简单的分为两种类型：强缓存(200 from cache)和协商缓存(304)\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"区别简述如下：\")]),\n      _vm._v(\" \"),\n      _c(\"pre\", [\n        _c(\"code\", [\n          _vm._v(\n            \"* 强缓存（200 from cache）时，浏览器如果判断本地缓存未过期，就直接使用，无需发起http请求（expired与cache-control）\\n* 协商缓存（304）时，浏览器会向服务端发起http请求（带上上一次服务器给你的标记），拿着标记与现在资源的标记进行对比，然后服务端告诉浏览器文件未改变，让浏览器使用本地缓存\\n\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"对于协商缓存，使用强制刷新就可以让缓存无效；但是对于强缓存，在未过期时，必须更新资源路径才能发起新的请求。\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"完整的协商缓存过程：发请求-->看资源是否过期-->过期-->请求服务器-->服务器对比资源是否真的过期-->没过期-->返回304状态码-->客户端用缓存的老资源。\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"_05-页面性能\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#_05-页面性能\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" &05.页面性能\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"https://www.cnblogs.com/smjack/archive/2009/02/24/1396895.html\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"p\", [_vm._v(\"题目：提升页面性能的方法有哪些\")]),\n          _vm._v(\" \"),\n          _c(\"p\", [_vm._v(\"1、压缩资源合并，减少HTTP请求\")]),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\"2、非核心代码的异步加载--异步加载的方式--异步加载的区别\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\n              \"异步加载的方式：1）动态脚本加载；2）script标签添加defer；3）script标签添加async\"\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"p\", [_vm._v(\"异步加载的区别\")]),\n          _vm._v(\" \"),\n          _c(\"pre\", [\n            _c(\"code\", [\n              _vm._v(\n                \"  1）defer是在HTML加载完成之后才会执行，如果是多个，按照加载的顺序依次执行；\\n\\n  2）async是在加载完之后立即执行，如果是多个，执行顺序和加载顺序无关；\\n\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"p\", [_vm._v(\"3、使用浏览器缓存--缓存的分类--缓存的原理\")]),\n          _vm._v(\" \"),\n          _c(\"p\", [_vm._v(\"缓存的分类--强缓存和协商缓存\")]),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\n              \"强缓存：expires、cache-control，如果两个都设置，以cache-control为准\"\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\n              \"协商缓存：Last-Modified、If-Modified-If-Modified-Since、Etag、If-None-Match\"\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\n              \"4、预解析DNS--dns-pre-fetch，大部分浏览器的a标签，默认打开预解析；但是如果连接是https，很多浏览器关闭了预解析\"\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\n              \"5、使用CDN：如果一个网站用了n个js、n个css，n个图片，把资源放在cdn上，可以更快的把资源解析出来\"\n            )\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"_6-从输入url到渲染出页面的整个过程\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#_6-从输入url到渲染出页面的整个过程\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" &6.从输入url到渲染出页面的整个过程\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\"加载资源的形式\\nhtml代码、媒体文件、JavaScript css\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"加载资源的过程\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"渲染的过程\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [_c(\"li\", [_vm._v(\"DNS解析：域名-》IP地址\")])]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"_7-window-onload和domcontentloaded的区别\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#_7-window-onload和domcontentloaded的区别\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" &7.window.onload和DOMContentLoaded的区别\")\n      ])\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}