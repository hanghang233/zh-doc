{"remainingRequest":"/Users/cassie/Desktop/work2/person/zh_doc/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/cassie/Desktop/work2/person/zh_doc/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/cassie/Desktop/work2/person/zh_doc/docs/VUE/ElementUI/A004.md?vue&type=template&id=82e154a8&","dependencies":[{"path":"/Users/cassie/Desktop/work2/person/zh_doc/docs/VUE/ElementUI/A004.md","mtime":1579685949462},{"path":"/Users/cassie/Desktop/work2/person/zh_doc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cassie/Desktop/work2/person/zh_doc/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/cassie/Desktop/work2/person/zh_doc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cassie/Desktop/work2/person/zh_doc/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/cassie/Desktop/work2/person/zh_doc/node_modules/@vuepress/markdown-loader/index.js","mtime":1546968779000}],"contextDependencies":[],"result":["\n<ContentSlotsDistributor :slot-key=\"$parent.slotKey\"><h1 id=\"a004-elementui-基于elementui组件npm包发布流程\"><a class=\"header-anchor\" href=\"#a004-elementui-基于elementui组件npm包发布流程\" aria-hidden=\"true\">#</a> A004_ElementUI 基于elementUI组件npm包发布流程</h1>\n<ul>\n<li>重要目录结构：</li>\n</ul>\n<!--beforebegin--><div class=\"language-bash line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>├─plugins // elementui按需引入相关配置\n├─src // 引入组件的入口文件\n    ├─lib // 构建后生成的文件，发布到npm包\n└─package.json\n\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br></div><!--beforeend--></div><!--afterend--><h2 id=\"引入element-elementui\"><a class=\"header-anchor\" href=\"#引入element-elementui\" aria-hidden=\"true\">#</a> 引入element/elementUI##</h2>\n<p>这里因为是基于elementUI二次封装的组件，并非所有组件都会用到，所以按需引入</p>\n<!--beforebegin--><div class=\"language-bash line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code><span class=\"token function\">import</span> <span class=\"token punctuation\">{</span> Button, Select, Row, Input, Option, Cascader, DatePicker, \n         Table, TableColumn, Pagination <span class=\"token punctuation\">}</span> from <span class=\"token string\">'element-ui'</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">import</span> Vue from <span class=\"token string\">'vue'</span>\n\nVue.component<span class=\"token punctuation\">(</span>Button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nVue.component<span class=\"token punctuation\">(</span>Select<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nVue.component<span class=\"token punctuation\">(</span>Row<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nVue.component<span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nVue.component<span class=\"token punctuation\">(</span>Option<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nVue.component<span class=\"token punctuation\">(</span>Cascader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nVue.component<span class=\"token punctuation\">(</span>DatePicker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nVue.component<span class=\"token punctuation\">(</span>Table<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nVue.component<span class=\"token punctuation\">(</span>TableColumn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nVue.component<span class=\"token punctuation\">(</span>Pagination<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br></div><!--beforeend--></div><!--afterend--><h2 id=\"添加组件\"><a class=\"header-anchor\" href=\"#添加组件\" aria-hidden=\"true\">#</a> 添加组件</h2>\n<p>lib文件存放组件库源码</p>\n<!--beforebegin--><div class=\"language-bash line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>├─lib\n    ├─dataTable\n        ├─dataTable.vue\n        ├─index.js\n    ├─dataSearch\n        ├─dataSearch.vue\n        ├─index.js\n    ├─index.js    //注册lib中所有组件\n\n//install是默认的方法，当外界组件在use这个组件的时候，就会调用默认的install方法，同时传vue这个类的参数\nDataTable.install <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>Vue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    Vue.component<span class=\"token punctuation\">(</span>DataTable.name, DataTable<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br></div><!--beforeend--></div><!--afterend--><p>lib-&gt;index.js</p>\n<!--beforebegin--><div class=\"language-bash line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code><span class=\"token function\">import</span> DataTable from <span class=\"token string\">'./dataTable/index'</span>\n<span class=\"token function\">import</span> DataSearch from <span class=\"token string\">'./dataSearch/index'</span>\n\n\n// 存储组件列表\nconst components <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    DataSearch,\n    DataTable\n<span class=\"token punctuation\">]</span>\nconst <span class=\"token function\">install</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>Vue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>install.installed<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span>\n  components.map<span class=\"token punctuation\">(</span>component <span class=\"token operator\">=</span><span class=\"token operator\">></span> Vue.component<span class=\"token punctuation\">(</span>component.name, component<span class=\"token punctuation\">))</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>typeof window <span class=\"token operator\">!=</span><span class=\"token operator\">=</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">&amp;&amp;</span> window.Vue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  install<span class=\"token punctuation\">(</span>window.Vue<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">export</span> default <span class=\"token punctuation\">{</span>\n  //这里必须传install，use时自动调用install方法\n    install,\n    DataSearch,\n    DataTable\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br><span class=\"line-number\">18</span><br><span class=\"line-number\">19</span><br><span class=\"line-number\">20</span><br><span class=\"line-number\">21</span><br><span class=\"line-number\">22</span><br><span class=\"line-number\">23</span><br></div><!--beforeend--></div><!--afterend--><h2 id=\"npm包相关配置-package-json\"><a class=\"header-anchor\" href=\"#npm包相关配置-package-json\" aria-hidden=\"true\">#</a> npm包相关配置--package.json</h2>\n<p>1.package.js编译库（参考：https://cli.vuejs.org/zh/guide/build-targets.html#%E5%BA%94%E7%94%A8）</p>\n<ul>\n<li>--target : 构建目标，默认为应用模式。这里修改为 lib 启用库模式。</li>\n<li>--dest : 输出目录，默认 dist 。这里我们改成 lib</li>\n<li>[entry] : 最后一个参数为入口文件，默认为 src/App.vue 。这里我们指定编译 packages/ 组件库目录。</li>\n</ul>\n<p>2.配置private字段为true</p>\n<p>3.main字段：配置添加依赖时的主要入口。不使用main属性的话我们可能需要这样写引用：require(&quot;some-module/dist/app.js&quot;)，如果我们在main属性中指定了dist/app.js的话，我们就可以直接引用依赖就可以了：require(&quot;some-module&quot;)</p>\n<!--beforebegin--><div class=\"language-bash line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code><span class=\"token string\">\"main\"</span><span class=\"token keyword\">:</span> <span class=\"token string\">\"lib/lsh-element-ui.common.js\"</span>,\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><p>4..npmignore 文件</p>\n<p>设置忽略发布文件，视情况而定。</p>\n<p>5.files 白名单，里面的文件都会被发布出去</p>\n<!--beforebegin--><div class=\"language-bash line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code><span class=\"token string\">\"files\"</span><span class=\"token keyword\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"dist/*\"</span>,\n    <span class=\"token string\">\"src/*\"</span>,\n    <span class=\"token string\">\"public/*\"</span>,\n    <span class=\"token string\">\"*.json\"</span>,\n    <span class=\"token string\">\"*.js\"</span>\n  <span class=\"token punctuation\">]</span>,\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br></div><!--beforeend--></div><!--afterend--><p>6.npm publish --tag beta : npm包发布beta版</p>\n<h2 id=\"webpack-chainwebpack-配置处理\"><a class=\"header-anchor\" href=\"#webpack-chainwebpack-配置处理\" aria-hidden=\"true\">#</a> webpack chainWebpack 配置处理</h2>\n<!--beforebegin--><div class=\"language-bash line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>// 扩展 webpack 配置，使 packages 加入编译\n  chainWebpack: config <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    config.module\n      .rule<span class=\"token punctuation\">(</span><span class=\"token string\">'js'</span><span class=\"token punctuation\">)</span>\n      .include\n        .add<span class=\"token punctuation\">(</span><span class=\"token string\">'/packages/'</span><span class=\"token punctuation\">)</span>\n        .end<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      .use<span class=\"token punctuation\">(</span><span class=\"token string\">'babel'</span><span class=\"token punctuation\">)</span>\n        .loader<span class=\"token punctuation\">(</span><span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">)</span>\n        .tap<span class=\"token punctuation\">(</span>options <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n          // 修改它的选项<span class=\"token punctuation\">..</span>.\n          <span class=\"token keyword\">return</span> options\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br></div><!--beforeend--></div><!--afterend--><h2 id=\"webpack-基础概念\"><a class=\"header-anchor\" href=\"#webpack-基础概念\" aria-hidden=\"true\">#</a> webpack 基础概念</h2>\n<p>1.entry：入口文件配置</p>\n<p>2.Output：告诉webpack在哪里输出它所创建的bundles，也可指定bundles的名称，默认位置为./dist</p>\n<p>3.loaders：webpack的编译器，使得webpack可以处理一些非JavaScript的文件，比如png、csv、xml、css、json等各种类型的文件，使用合适的loader可以让JavaScript的import导入非JavaScript模块。JavaScript只认为JavaScript文件是模块，而webpack的设计思想即万物皆模块，为了使得webpack能够认识其他“模块”，所以需要loader这个“编译器”。</p>\n<p>4.Plugins：执行范围更广的任务，包括打包、优化、压缩、搭建服务器等等，功能十分强大。要是用一个插件，一般是先使用npm包管理器进行安装，然后在配置文件中引入，最后将其实例化后传递给plugins数组属性。</p>\n<p>5.mode：一般分为测试环境和正式环境</p>\n<h2 id=\"webpack-动态生成index-html和bundle-js\"><a class=\"header-anchor\" href=\"#webpack-动态生成index-html和bundle-js\" aria-hidden=\"true\">#</a> webpack 动态生成index.html和bundle.js</h2>\n<p>动态生成是指，webpack每次打包中都会给文件添加hash值，使得每次打包之后相同的文件都会有不同的名字，因此在html页面内引入，也需要动态修改script标签中的值---为了强制让浏览器进行刷新，获取当前最新的文件</p>\n<ul>\n<li>动态生成bundle.js</li>\n</ul>\n<!--beforebegin--><div class=\"language-bash line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>// webpack.config.js\nmodule.exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    output: <span class=\"token punctuation\">{</span>\n        path: __dirname + <span class=\"token string\">'/dist'</span>,\n        filename: <span class=\"token string\">'[name].[hash].js'</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br></div><!--beforeend--></div><!--afterend--><ul>\n<li>动态添加bundle文件到html中</li>\n</ul>\n<p>html-webpack-plugin插件，自动生成html文件</p>\n<!--beforebegin--><div class=\"language-bash line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>// webpack.config.js\nconst HtmlWebpackPlugin <span class=\"token operator\">=</span> require<span class=\"token punctuation\">(</span><span class=\"token string\">'html-webpack-plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmodule.exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    // other configs <span class=\"token punctuation\">..</span>.\n    plugins: <span class=\"token punctuation\">[</span>\n        new HtmlWebpackPlugin<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            // options配置\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br></div><!--beforeend--></div><!--afterend--><h2 id=\"webpack-清理dist文件\"><a class=\"header-anchor\" href=\"#webpack-清理dist文件\" aria-hidden=\"true\">#</a> webpack 清理dist文件</h2>\n<h2 id=\"webpack-搭建开发环境\"><a class=\"header-anchor\" href=\"#webpack-搭建开发环境\" aria-hidden=\"true\">#</a> webpack 搭建开发环境</h2>\n<ol>\n<li>\n<p>使用source maps进行调试：因为生产环境要求代码必须精简，压缩，在浏览器中无法进行断点调试，在开发环境中需要使用source maps进行调试</p>\n</li>\n<li>\n<p>热更新</p>\n</li>\n</ol>\n<h2 id=\"vue-cli3-查看webpack配置信息\"><a class=\"header-anchor\" href=\"#vue-cli3-查看webpack配置信息\" aria-hidden=\"true\">#</a> vue-cli3 查看webpack配置信息</h2>\n<ol>\n<li>\n<p>终端输入：vue inspect --mode development</p>\n</li>\n<li>\n<p>输出到某个文件：webpack.config.development.js</p>\n</li>\n</ol>\n<h2 id=\"webpack打包优化实践总结\"><a class=\"header-anchor\" href=\"#webpack打包优化实践总结\" aria-hidden=\"true\">#</a> webpack打包优化实践总结</h2>\n<ul>\n<li>https://juejin.im/post/5c76843af265da2ddd4a6dd0</li>\n</ul>\n<ol>\n<li>组件动态引入，按需加载，app.653b22c5.js 可以拆分成若干个 js，使用时才去加载对应的 js。</li>\n</ol>\n<ul>\n<li>路由懒加载</li>\n</ul>\n<p>require代替import解决vue 项目首页加载时间过久的问题。当访问这个页面时，才会加载这个页面的js文件</p>\n<!--beforebegin--><div class=\"language-bash line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>component: resolve <span class=\"token operator\">=</span><span class=\"token operator\">></span> require<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'../components/page/ForgetPwd.vue'</span><span class=\"token punctuation\">]</span>, resolve<span class=\"token punctuation\">)</span>\n\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br></div><!--beforeend--></div><!--afterend--><p>1）但是需要注意，如果拆分的颗粒过细，会造成更多的网络资源请求，对网站加载造成影响。也可以尝试分组打包优化</p>\n<p>2）webpack会给所有懒加载的路由添加prefetch标签，prefetch可以让浏览器提前加载加载下个页面可能会需要的资源（preload和prefetch的区别在于，preload的资源会和页面需要的静态资源并行加载，而prefetch则会等到浏览器加载完必要的资源后，在空闲时间加载被标记为prefetch的资源）；</p>\n<ol start=\"2\">\n<li>\n<p>三方库组件，按需加载，chunk-vendors.82702712.js 可以做拆分，不必一下全部加载，可在使用时再去加载对应部分的 js。</p>\n</li>\n<li>\n<p>网络请求相关--webpack配置externals选项</p>\n</li>\n</ol>\n<p>项目中会使用到三方组件库，webpack会默认将这些三方组件库打包到app.js中，导致项目很大。这里使用webpack externals选项，将三方组件库用CDN的模式引入，减少bundle文件</p>\n<p>这部分旨在实现需求的前提下尽量减少http请求的开销，或者减少响应时间</p>\n<ul>\n<li>CDN：将第三类库放到CDN上面，可以大幅度的减少生产环境的项目体积。使用CDN会一定程度上提升项目中的静态文件的传输速度，在vue-cli3中可以通过externals配置项，将第三方的类库的引用地址从本地指向你提供的CDN地址</li>\n</ul>\n<h2 id=\"webpack-配置相关demo\"><a class=\"header-anchor\" href=\"#webpack-配置相关demo\" aria-hidden=\"true\">#</a> webpack 配置相关demo</h2>\n<ul>\n<li>https://github.com/loveRandy/vue-cli3.0-vueadmin</li>\n<li>https://github.com/staven630/vue-cli4-config</li>\n</ul>\n<p>相关涉及点：</p>\n<ol>\n<li>\n<p>设置别名</p>\n</li>\n<li>\n<p>设置多页面打包</p>\n</li>\n<li>\n<p>区分测试环境和正式环境打包配置--项目中，可用来解决测试环境需要强刷缓存更新问题</p>\n</li>\n<li>\n<p>svg转font字体</p>\n</li>\n<li>\n<p>添加打包分析</p>\n</li>\n<li>\n<p>配置externals引入cdn资源</p>\n</li>\n<li>\n<p>多页面打包</p>\n</li>\n<li>\n<p>去掉console.log</p>\n</li>\n</ol>\n<h2 id=\"npm包发布流程\"><a class=\"header-anchor\" href=\"#npm包发布流程\" aria-hidden=\"true\">#</a> npm包发布流程</h2>\n</ContentSlotsDistributor>\n",null]}